module.exports = {
  type: 'object',
  description: 'Note that changes in settings with an asterisk(*) need restarting of Atom to take effect.',
  properties: {
    enabled: {
      title: '*Enable this autocomplete+ provider',
      description: 'Note that if enabled on Atom startup, this can be disabled and enabled anytime; if disabled on startup, enabling this setting has no effect until a restart of Atom',
      type: 'boolean',
      default: false,
      order: 1,
    },
    fileProvided: {
      title: 'File to be provided',
      description: 'The file needs to be a csv-style file with any kind of delimiter; will be updated automatically.',
      type: 'string',
      default: '',
      order: 2,
    },
    delimiter: {
      title: 'Custom delimiter',
      description: 'Use `auto` to guess the delimiter.',
      type: 'string',
      default: 'auto',
      order: 3,
    },
    selector: {
      title: '*Grammar selector to activate autocompletions',
      type: 'string',
      default: '*',
      order: 4,
    },
    matchPrefix: {
      title: 'Prefix to be matched for suggestions',
      description: 'This will be parsed as a RegEx that needs to be matched for autocomplete to start; it should end with a `$` to match the cursor position, and you may want to add a whitespace in the beginning (in a capturing group, see below).',
      type: 'string',
      default: '[\\w0-9_-]+$',
      order: 5,
    },
    retainFirstCapture: {
      title: 'Retain the first match when replacing the result',
      description: 'In lack of a negative lookbehind, when activated the first capturing group of the RegEx will be retained on substitution; otherwise the whole match will be replaced.',
      type: 'boolean',
      default: true,
      order: 6,
    },
    inclusionPriority: {
      title: '*Inclusion priority passed to autocomplete+',
      type: 'integer',
      minimum: 1,
      default: 99,
      order: 7,
    },
    suggestionPriority: {
      title: '*Suggestion priority passed to autocomplete+',
      type: 'integer',
      minimum: 1,
      default: 99,
      order: 8,
    },
    excludeLowerPriority: {
      title: '*Exclude autocomplete+ suggestion with lower inclusion priority',
      type: 'boolean',
      default: false,
      order: 9,
    },
    numberOfSuggestions: {
      title: 'Number of suggestions',
      description: '0 to provide all rows (in order)',
      type: 'integer',
      minimum: 0,
      default: 0,
      order: 10,
    },
    useAutocompleteFilter: {
      title: '*Use the autocomplete filter',
      description: 'The autocomplete filter will order and filter suggestions from this and other providers, but this invalidates the suggestion priority; thus your autocompletions will not be on that place (e.g. top) of the list any more.',
      type: 'boolean',
      default: false,
      order: 11,
    },
    sortSuggestionsByField: {
      title: 'Column to order suggestions by',
      title: 'If not using the autocomplete filter, this specifies the column by which to order the suggestions using fuzzy match.',
      type: 'string',
      default: 'text',
      order: 12,
    },
  },
};
